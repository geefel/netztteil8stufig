

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jan 19 13:13:10 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F84
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x4E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F84 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     0081                     	;# 
    60     0085                     	;# 
    61     0086                     	;# 
    62     0088                     	;# 
    63     0089                     	;# 
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     0081                     	;# 
    76     0085                     	;# 
    77     0086                     	;# 
    78     0088                     	;# 
    79     0089                     	;# 
    80     0005                     _PORTAbits	set	5
    81     0006                     _PORTBbits	set	6
    82     0059                     _INTF	set	89
    83     005C                     _INTE	set	92
    84     005F                     _GIE	set	95
    85     0085                     _TRISAbits	set	133
    86     0086                     _TRISBbits	set	134
    87                           
    88                           	psect	cinit
    89     000C                     start_initialization:	
    90                           ; #config settings
    91                           
    92     000C                     __initialization:
    93     000C                     end_of_initialization:	
    94                           ;End of C runtime variable initialization code
    95                           
    96     000C                     __end_of__initialization:
    97     000C  0183               	clrf	3
    98     000D  280E               	ljmp	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMMON
   101     0000                     __pcstackCOMMON:
   102     0000                     ??_send:
   103     0000                     ??_clearAllRelay:	
   104                           ; 1 bytes @ 0x0
   105                           
   106     0000                     ??_main:	
   107                           ; 1 bytes @ 0x0
   108                           
   109                           
   110                           	psect	cstackBANK0
   111     000C                     __pcstackBANK0:	
   112                           ; 1 bytes @ 0x0
   113                           
   114     000C                     ?_send:
   115     000C                     ?_clearAllRelay:	
   116                           ; 1 bytes @ 0x0
   117                           
   118     000C                     ?_ISR:	
   119                           ; 1 bytes @ 0x0
   120                           
   121     000C                     ??_ISR:	
   122                           ; 1 bytes @ 0x0
   123                           
   124     000C                     ?_main:	
   125                           ; 1 bytes @ 0x0
   126                           
   127     000C                     send@c:	
   128                           ; 2 bytes @ 0x0
   129                           
   130                           
   131                           ; 1 bytes @ 0x0
   132     000C                     	ds	2
   133                           
   134                           	psect	maintext
   135     000E                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 59 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  2   24[None  ] int 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, pclath, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : B00/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMMON   BANK0
   155 ;;      Params:         0       0
   156 ;;      Locals:         0       0
   157 ;;      Temps:          0       0
   158 ;;      Totals:         0       0
   159 ;;Total ram usage:        0 bytes
   160 ;; Hardware stack levels required when called: 2
   161 ;; This function calls:
   162 ;;		_clearAllRelay
   163 ;;		_send
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169     000E                     _main:	
   170                           ;psect for function _main
   171                           
   172     000E                     l638:	
   173                           ;incstack = 0
   174                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   175                           
   176                           
   177                           ;main.c: 60:     TRISBbits.TRISB0 = 1;
   178     000E  1683               	bsf	3,5	;RP0=1, select bank1
   179     000F  1406               	bsf	6,0	;volatile
   180                           
   181                           ;main.c: 61:     TRISBbits.TRISB1 = 0;
   182     0010  1086               	bcf	6,1	;volatile
   183                           
   184                           ;main.c: 62:     TRISBbits.TRISB2 = 0;
   185     0011  1106               	bcf	6,2	;volatile
   186                           
   187                           ;main.c: 63:     TRISBbits.TRISB3 = 0;
   188     0012  1186               	bcf	6,3	;volatile
   189                           
   190                           ;main.c: 64:     TRISBbits.TRISB4 = 0;
   191     0013  1206               	bcf	6,4	;volatile
   192                           
   193                           ;main.c: 65:     TRISBbits.TRISB5 = 0;
   194     0014  1286               	bcf	6,5	;volatile
   195                           
   196                           ;main.c: 66:     TRISBbits.TRISB6 = 0;
   197     0015  1306               	bcf	6,6	;volatile
   198                           
   199                           ;main.c: 67:     TRISBbits.TRISB7 = 0;
   200     0016  1386               	bcf	6,7	;volatile
   201                           
   202                           ;main.c: 68:     TRISAbits.TRISA0 = 1;
   203     0017  1405               	bsf	5,0	;volatile
   204                           
   205                           ;main.c: 69:     TRISAbits.TRISA1 = 1;
   206     0018  1485               	bsf	5,1	;volatile
   207                           
   208                           ;main.c: 70:     TRISAbits.TRISA2 = 1;
   209     0019  1505               	bsf	5,2	;volatile
   210                           
   211                           ;main.c: 71:     TRISAbits.TRISA3 = 1;
   212     001A  1585               	bsf	5,3	;volatile
   213                           
   214                           ;main.c: 72:     TRISAbits.TRISA4 = 1;
   215     001B  1605               	bsf	5,4	;volatile
   216                           
   217                           ;main.c: 74:     PORTBbits.RB1 = 1;
   218     001C  1283               	bcf	3,5	;RP0=0, select bank0
   219     001D  1486               	bsf	6,1	;volatile
   220                           
   221                           ;main.c: 75:     PORTBbits.RB2 = 1;
   222     001E  1506               	bsf	6,2	;volatile
   223                           
   224                           ;main.c: 77:     PORTBbits.RB3 = 0;
   225     001F  1186               	bcf	6,3	;volatile
   226                           
   227                           ;main.c: 78:     PORTBbits.RB4 = 0;
   228     0020  1206               	bcf	6,4	;volatile
   229                           
   230                           ;main.c: 79:     PORTBbits.RB5 = 0;
   231     0021  1286               	bcf	6,5	;volatile
   232                           
   233                           ;main.c: 80:     PORTBbits.RB6 = 0;
   234     0022  1306               	bcf	6,6	;volatile
   235                           
   236                           ;main.c: 81:     PORTBbits.RB7 = 0;
   237     0023  1386               	bcf	6,7	;volatile
   238                           
   239                           ;main.c: 83:     GIE = 1;
   240     0024  178B               	bsf	11,7	;volatile
   241                           
   242                           ;main.c: 84:     INTE = 1;
   243     0025  160B               	bsf	11,4	;volatile
   244     0026                     l25:	
   245                           ;main.c: 86:     while(1) {
   246                           
   247                           
   248                           ;main.c: 87:         if (PORTAbits.RA0 == 0) {
   249     0026  1805               	btfsc	5,0	;volatile
   250     0027  2829               	goto	u121
   251     0028  282A               	goto	u120
   252     0029                     u121:
   253     0029  2834               	goto	l26
   254     002A                     u120:
   255     002A                     l640:
   256                           
   257                           ;main.c: 88:             clearAllRelay();
   258     002A  207F               	fcall	_clearAllRelay
   259     002B                     l642:
   260                           
   261                           ;main.c: 89:             PORTBbits.RB3 = 1;
   262     002B  1283               	bcf	3,5	;RP0=0, select bank0
   263     002C  1586               	bsf	6,3	;volatile
   264     002D                     l644:
   265                           
   266                           ;main.c: 90:             send('1');
   267     002D  3031               	movlw	49
   268     002E  2086               	fcall	_send
   269     002F                     l27:	
   270                           ;main.c: 91:             while(PORTAbits.RA0 == 0) ;
   271                           
   272     002F  1283               	bcf	3,5	;RP0=0, select bank0
   273     0030  1C05               	btfss	5,0	;volatile
   274     0031  2833               	goto	u131
   275     0032  2834               	goto	u130
   276     0033                     u131:
   277     0033  282F               	goto	l27
   278     0034                     u130:
   279     0034                     l26:	
   280                           ;main.c: 92:         }
   281                           
   282                           
   283                           ;main.c: 93:         if (PORTAbits.RA1 == 0) {
   284     0034  1885               	btfsc	5,1	;volatile
   285     0035  2837               	goto	u141
   286     0036  2838               	goto	u140
   287     0037                     u141:
   288     0037  2842               	goto	l30
   289     0038                     u140:
   290     0038                     l646:
   291                           
   292                           ;main.c: 94:             clearAllRelay();
   293     0038  207F               	fcall	_clearAllRelay
   294     0039                     l648:
   295                           
   296                           ;main.c: 95:             PORTBbits.RB4 = 1;
   297     0039  1283               	bcf	3,5	;RP0=0, select bank0
   298     003A  1606               	bsf	6,4	;volatile
   299     003B                     l650:
   300                           
   301                           ;main.c: 96:             send('2');
   302     003B  3032               	movlw	50
   303     003C  2086               	fcall	_send
   304     003D                     l31:	
   305                           ;main.c: 97:             while(PORTAbits.RA1 == 0) ;
   306                           
   307     003D  1283               	bcf	3,5	;RP0=0, select bank0
   308     003E  1C85               	btfss	5,1	;volatile
   309     003F  2841               	goto	u151
   310     0040  2842               	goto	u150
   311     0041                     u151:
   312     0041  283D               	goto	l31
   313     0042                     u150:
   314     0042                     l30:	
   315                           ;main.c: 98:         }
   316                           
   317                           
   318                           ;main.c: 99:         if (PORTAbits.RA2 == 0) {
   319     0042  1905               	btfsc	5,2	;volatile
   320     0043  2845               	goto	u161
   321     0044  2846               	goto	u160
   322     0045                     u161:
   323     0045  2850               	goto	l34
   324     0046                     u160:
   325     0046                     l652:
   326                           
   327                           ;main.c: 100:             clearAllRelay();
   328     0046  207F               	fcall	_clearAllRelay
   329     0047                     l654:
   330                           
   331                           ;main.c: 101:             PORTBbits.RB5 = 1;
   332     0047  1283               	bcf	3,5	;RP0=0, select bank0
   333     0048  1686               	bsf	6,5	;volatile
   334     0049                     l656:
   335                           
   336                           ;main.c: 102:             send('3');
   337     0049  3033               	movlw	51
   338     004A  2086               	fcall	_send
   339     004B                     l35:	
   340                           ;main.c: 103:             while(PORTAbits.RA2 == 0) ;
   341                           
   342     004B  1283               	bcf	3,5	;RP0=0, select bank0
   343     004C  1D05               	btfss	5,2	;volatile
   344     004D  284F               	goto	u171
   345     004E  2850               	goto	u170
   346     004F                     u171:
   347     004F  284B               	goto	l35
   348     0050                     u170:
   349     0050                     l34:	
   350                           ;main.c: 104:         }
   351                           
   352                           
   353                           ;main.c: 105:         if (PORTAbits.RA3 == 0) {
   354     0050  1985               	btfsc	5,3	;volatile
   355     0051  2853               	goto	u181
   356     0052  2854               	goto	u180
   357     0053                     u181:
   358     0053  285E               	goto	l38
   359     0054                     u180:
   360     0054                     l658:
   361                           
   362                           ;main.c: 106:             clearAllRelay();
   363     0054  207F               	fcall	_clearAllRelay
   364     0055                     l660:
   365                           
   366                           ;main.c: 107:             PORTBbits.RB6 = 1;
   367     0055  1283               	bcf	3,5	;RP0=0, select bank0
   368     0056  1706               	bsf	6,6	;volatile
   369     0057                     l662:
   370                           
   371                           ;main.c: 108:             send('4');
   372     0057  3034               	movlw	52
   373     0058  2086               	fcall	_send
   374     0059                     l39:	
   375                           ;main.c: 109:             while(PORTAbits.RA3 == 0) ;
   376                           
   377     0059  1283               	bcf	3,5	;RP0=0, select bank0
   378     005A  1D85               	btfss	5,3	;volatile
   379     005B  285D               	goto	u191
   380     005C  285E               	goto	u190
   381     005D                     u191:
   382     005D  2859               	goto	l39
   383     005E                     u190:
   384     005E                     l38:	
   385                           ;main.c: 110:         }
   386                           
   387                           
   388                           ;main.c: 111:         if (PORTAbits.RA4 == 0) {
   389     005E  1A05               	btfsc	5,4	;volatile
   390     005F  2861               	goto	u201
   391     0060  2862               	goto	u200
   392     0061                     u201:
   393     0061  2826               	goto	l25
   394     0062                     u200:
   395     0062                     l664:
   396                           
   397                           ;main.c: 112:             clearAllRelay();
   398     0062  207F               	fcall	_clearAllRelay
   399     0063                     l666:
   400                           
   401                           ;main.c: 113:             PORTBbits.RB7 = 1;
   402     0063  1283               	bcf	3,5	;RP0=0, select bank0
   403     0064  1786               	bsf	6,7	;volatile
   404     0065                     l668:
   405                           
   406                           ;main.c: 114:             send('5');
   407     0065  3035               	movlw	53
   408     0066  2086               	fcall	_send
   409     0067                     l43:	
   410                           ;main.c: 115:             while(PORTAbits.RA4 == 0) ;
   411                           
   412     0067  1283               	bcf	3,5	;RP0=0, select bank0
   413     0068  1E05               	btfss	5,4	;volatile
   414     0069  286B               	goto	u211
   415     006A  286C               	goto	u210
   416     006B                     u211:
   417     006B  2867               	goto	l43
   418     006C                     u210:
   419     006C  2826               	goto	l25
   420     006D  280B               	ljmp	start
   421     006E                     __end_of_main:
   422                           
   423                           	psect	text1
   424     0086                     __ptext1:	
   425 ;; *************** function _send *****************
   426 ;; Defined at:
   427 ;;		line 47 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;  c               1    wreg     unsigned char 
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  c               1    0[BANK0 ] unsigned char 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0
   441 ;;      Params:         0       0
   442 ;;      Locals:         0       0
   443 ;;      Temps:          0       0
   444 ;;      Totals:         0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used: 1
   447 ;; Hardware stack levels required when called: 1
   448 ;; This function calls:
   449 ;;		Nothing
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455     0086                     _send:	
   456                           ;psect for function _send
   457                           
   458     0086                     l17:	
   459                           ;incstack = 0
   460                           ; Regs used in _send: [wreg]
   461                           
   462     0086  0008               	return
   463     0087                     __end_of_send:
   464                           
   465                           	psect	text2
   466     007F                     __ptext2:	
   467 ;; *************** function _clearAllRelay *****************
   468 ;; Defined at:
   469 ;;		line 51 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0
   483 ;;      Params:         0       0
   484 ;;      Locals:         0       0
   485 ;;      Temps:          0       0
   486 ;;      Totals:         0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497     007F                     _clearAllRelay:	
   498                           ;psect for function _clearAllRelay
   499                           
   500     007F                     l636:	
   501                           ;incstack = 0
   502                           ; Regs used in _clearAllRelay: []
   503                           
   504                           
   505                           ;main.c: 52:     PORTBbits.RB3 = 0;
   506     007F  1283               	bcf	3,5	;RP0=0, select bank0
   507     0080  1186               	bcf	6,3	;volatile
   508                           
   509                           ;main.c: 53:     PORTBbits.RB4 = 0;
   510     0081  1206               	bcf	6,4	;volatile
   511                           
   512                           ;main.c: 54:     PORTBbits.RB5 = 0;
   513     0082  1286               	bcf	6,5	;volatile
   514                           
   515                           ;main.c: 55:     PORTBbits.RB6 = 0;
   516     0083  1306               	bcf	6,6	;volatile
   517                           
   518                           ;main.c: 56:     PORTBbits.RB7 = 0;
   519     0084  1386               	bcf	6,7	;volatile
   520     0085                     l20:
   521     0085  0008               	return
   522     0086                     __end_of_clearAllRelay:
   523                           
   524                           	psect	text3
   525     006E                     __ptext3:	
   526 ;; *************** function _ISR *****************
   527 ;; Defined at:
   528 ;;		line 122 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		None
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0
   542 ;;      Params:         0       0
   543 ;;      Locals:         0       0
   544 ;;      Temps:          0       2
   545 ;;      Totals:         0       2
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		Interrupt level 1
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555     006E                     _ISR:	
   556                           ;psect for function _ISR
   557                           
   558     006E                     i1l670:
   559                           
   560                           ;main.c: 123:     if (INTF) {
   561     006E  1C8B               	btfss	11,1	;volatile
   562     006F  2871               	goto	u22_21
   563     0070  2872               	goto	u22_20
   564     0071                     u22_21:
   565     0071  2878               	goto	i1l54
   566     0072                     u22_20:
   567     0072                     i1l672:
   568                           
   569                           ;main.c: 124:         PORTBbits.RB3 = 0;
   570     0072  1186               	bcf	6,3	;volatile
   571                           
   572                           ;main.c: 125:         PORTBbits.RB4 = 0;
   573     0073  1206               	bcf	6,4	;volatile
   574                           
   575                           ;main.c: 126:         PORTBbits.RB5 = 0;
   576     0074  1286               	bcf	6,5	;volatile
   577                           
   578                           ;main.c: 127:         PORTBbits.RB6 = 0;
   579     0075  1306               	bcf	6,6	;volatile
   580                           
   581                           ;main.c: 128:         PORTBbits.RB7 = 0;
   582     0076  1386               	bcf	6,7	;volatile
   583                           
   584                           ;main.c: 129:         INTF = 0;
   585     0077  108B               	bcf	11,1	;volatile
   586     0078                     i1l54:
   587     0078  080D               	movf	??_ISR+1,w
   588     0079  008A               	movwf	10
   589     007A  0E0C               	swapf	??_ISR,w
   590     007B  0083               	movwf	3
   591     007C  0ECE               	swapf	btemp,f
   592     007D  0E4E               	swapf	btemp,w
   593     007E  0009               	retfie
   594     007F                     __end_of_ISR:
   595     004E                     btemp	set	78	;btemp
   596     004E                     wtemp0	set	78
   597                           
   598                           	psect	intentry
   599     0004                     __pintentry:	
   600                           ;incstack = 0
   601                           ; Regs used in _ISR: []
   602                           
   603     0004                     interrupt_function:
   604     004E                     saved_w	set	btemp
   605     0004  00CE               	movwf	btemp
   606     0005  0E03               	swapf	3,w
   607     0006  1283               	bcf	3,5	;RP0=0, select bank0
   608     0007  008C               	movwf	??_ISR
   609     0008  080A               	movf	10,w
   610     0009  008D               	movwf	??_ISR+1
   611     000A  286E               	ljmp	_ISR

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      2       2

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _clearAllRelay
                               _send
 ---------------------------------------------------------------------------------
 (1) _send                                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _clearAllRelay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearAllRelay
   _send

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      2       2       3        3.0%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jan 19 13:13:10 2025

                     l20 0085                       l30 0042                       l31 003D  
                     l17 0086                       l25 0026                       l34 0050  
                     l26 0034                       l43 0067                       l35 004B  
                     l27 002F                       l38 005E                       l39 0059  
                    l640 002A                      l650 003B                      l642 002B  
                    l636 007F                      l660 0055                      l652 0046  
                    l644 002D                      l662 0057                      l654 0047  
                    l646 0038                      l638 000E                      l664 0062  
                    l656 0049                      l648 0039                      l666 0063  
                    l658 0054                      l668 0065                      _GIE 005F  
                    u200 0062                      u120 002A                      u201 0061  
                    u121 0029                      u210 006C                      u130 0034  
                    u211 006B                      u131 0033                      u140 0038  
                    u141 0037                      u150 0042                      u151 0041  
                    u160 0046                      u161 0045                      u170 0050  
                    u171 004F                      u180 0054                      u181 0053  
                    u190 005E                      u191 005D                      _ISR 006E  
                   ?_ISR 000C                     _INTE 005C                     _INTF 0059  
                   i1l54 0078                     _main 000E                     _send 0086  
                   btemp 004E                     start 000B                    ??_ISR 000C  
                  ?_main 000C                    ?_send 000C                    i1l670 006E  
                  i1l672 0072                    u22_20 0072                    u22_21 0071  
                  pclath 000A                    send@c 000C                    status 0003  
                  wtemp0 004E    __end_of_clearAllRelay 0086          __initialization 000C  
           __end_of_main 006E             __end_of_send 0087                   ??_main 0000  
                 ??_send 0000                   saved_w 004E  __end_of__initialization 000C  
         __pcstackCOMMON 0000               __pmaintext 000E               __pintentry 0004  
                __ptext1 0086                  __ptext2 007F                  __ptext3 006E  
   end_of_initialization 000C                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086      start_initialization 000C  
            __end_of_ISR 007F            _clearAllRelay 007F                ___latbits 0000  
          __pcstackBANK0 000C           ?_clearAllRelay 000C        interrupt_function 0004  
        ??_clearAllRelay 0000                 intlevel1 0000  
